"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/analyze/route";
exports.ids = ["app/api/analyze/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze%2Froute&page=%2Fapi%2Fanalyze%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze%2Froute.ts&appDir=%2FUsers%2Fdavekeefe%2FDocuments%2FPythonScripts%2Fsaas%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdavekeefe%2FDocuments%2FPythonScripts%2Fsaas&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze%2Froute&page=%2Fapi%2Fanalyze%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze%2Froute.ts&appDir=%2FUsers%2Fdavekeefe%2FDocuments%2FPythonScripts%2Fsaas%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdavekeefe%2FDocuments%2FPythonScripts%2Fsaas&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_davekeefe_Documents_PythonScripts_saas_src_app_api_analyze_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/analyze/route.ts */ \"(rsc)/./src/app/api/analyze/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/analyze/route\",\n        pathname: \"/api/analyze\",\n        filename: \"route\",\n        bundlePath: \"app/api/analyze/route\"\n    },\n    resolvedPagePath: \"/Users/davekeefe/Documents/PythonScripts/saas/src/app/api/analyze/route.ts\",\n    nextConfigOutput,\n    userland: _Users_davekeefe_Documents_PythonScripts_saas_src_app_api_analyze_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/analyze/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhbmFseXplJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhbmFseXplJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYW5hbHl6ZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmRhdmVrZWVmZSUyRkRvY3VtZW50cyUyRlB5dGhvblNjcmlwdHMlMkZzYWFzJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmRhdmVrZWVmZSUyRkRvY3VtZW50cyUyRlB5dGhvblNjcmlwdHMlMkZzYWFzJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzBCO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDNko7O0FBRTdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2Fhcy8/MTFiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvZGF2ZWtlZWZlL0RvY3VtZW50cy9QeXRob25TY3JpcHRzL3NhYXMvc3JjL2FwcC9hcGkvYW5hbHl6ZS9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYW5hbHl6ZS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FuYWx5emVcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2FuYWx5emUvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvZGF2ZWtlZWZlL0RvY3VtZW50cy9QeXRob25TY3JpcHRzL3NhYXMvc3JjL2FwcC9hcGkvYW5hbHl6ZS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hbmFseXplL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze%2Froute&page=%2Fapi%2Fanalyze%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze%2Froute.ts&appDir=%2FUsers%2Fdavekeefe%2FDocuments%2FPythonScripts%2Fsaas%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdavekeefe%2FDocuments%2FPythonScripts%2Fsaas&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/analyze/helpers.ts":
/*!****************************************!*\
  !*** ./src/app/api/analyze/helpers.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSubmissionById: () => (/* binding */ getSubmissionById),\n/* harmony export */   getSubmissions: () => (/* binding */ getSubmissions),\n/* harmony export */   loadSubmissions: () => (/* binding */ loadSubmissions),\n/* harmony export */   saveSubmissions: () => (/* binding */ saveSubmissions)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n\n// In-memory storage for beta - but we'll back it up to cookies\nlet submissions = [];\n// Use cookies for persistent storage that works on both client and server\nconst loadSubmissions = ()=>{\n    try {\n        // Server-side: Use Next.js cookies API\n        const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        const savedSubmissions = cookieStore.get(\"savedSubmissions\");\n        if (savedSubmissions) {\n            try {\n                // Try to parse the cookie data\n                const cookieData = JSON.parse(decodeURIComponent(savedSubmissions.value));\n                // If the cookie has data and our in-memory cache is empty, use the cookie data\n                if (cookieData && Array.isArray(cookieData) && cookieData.length > 0 && submissions.length === 0) {\n                    submissions = cookieData;\n                    console.log(`Loaded ${submissions.length} submissions from cookies`);\n                }\n            } catch (e) {\n                console.error(\"Error parsing submissions from cookies:\", e);\n            }\n        }\n        // Return whatever we have (from memory or cookies)\n        return submissions;\n    } catch (error) {\n        console.error(\"Error loading saved submissions:\", error);\n        return submissions; // Return whatever we have in memory\n    }\n};\n// Store submissions in a cookie with a global scope\nconst saveSubmissions = (response, data)=>{\n    try {\n        if (data && data.length > 0) {\n            // Store in memory for this server instance\n            submissions = data;\n            // For the cookie, store only essential data (IDs and minimal metadata)\n            const minimalSubmissions = data.map((sub)=>({\n                    id: sub.id,\n                    title: sub.title,\n                    userId: sub.userId,\n                    createdAt: sub.createdAt,\n                    score: sub.score,\n                    status: sub.status\n                }));\n            // Only save up to 20 submissions in the cookie to avoid size limits\n            const limitedSubmissions = minimalSubmissions.slice(0, 20);\n            // Store minimal version in cookie\n            response.cookies.set({\n                name: \"savedSubmissions\",\n                value: encodeURIComponent(JSON.stringify(limitedSubmissions)),\n                path: \"/\",\n                maxAge: 60 * 60 * 24 * 7,\n                httpOnly: false,\n                sameSite: \"strict\"\n            });\n            // Also save IDs separately for easier lookup\n            const submissionIds = data.map((sub)=>sub.id);\n            response.cookies.set({\n                name: \"submissionIds\",\n                value: JSON.stringify(submissionIds.slice(0, 100)),\n                path: \"/\",\n                maxAge: 60 * 60 * 24 * 7,\n                httpOnly: false,\n                sameSite: \"strict\"\n            });\n            console.log(`Saved ${limitedSubmissions.length} submissions to cookie storage`);\n        }\n    } catch (error) {\n        console.error(\"Error saving submissions:\", error);\n    }\n    return response;\n};\n// Global in-memory map to store full submission details by ID\nconst submissionDetails = new Map();\n// Function to get submissions - make sure we always get the latest data\nconst getSubmissions = ()=>{\n    // Always try to load from storage first\n    return loadSubmissions();\n};\n// Get a specific submission by ID\nconst getSubmissionById = (id)=>{\n    // First check our detailed map\n    if (submissionDetails.has(id)) {\n        console.log(`Retrieved submission ${id} from detailed cache`);\n        return submissionDetails.get(id);\n    }\n    // If not found, load all submissions and find by ID\n    const allSubmissions = loadSubmissions();\n    const submission = allSubmissions.find((sub)=>sub.id === id);\n    if (submission) {\n        console.log(`Found submission ${id} in general submissions list`);\n        // If found, add to detail map for next time\n        submissionDetails.set(id, submission);\n    } else {\n        console.log(`Submission ${id} not found in any storage`);\n    }\n    return submission;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/analyze/helpers.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/api/analyze/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/analyze/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ \"(rsc)/./src/app/api/analyze/helpers.ts\");\n\n\nasync function POST(request) {\n    try {\n        // Check if the request is a form (CSV file upload) or JSON (submission)\n        const contentType = request.headers.get(\"content-type\") || \"\";\n        if (contentType.includes(\"multipart/form-data\")) {\n            return handleCSVAnalysis(request);\n        } else {\n            return handleSubmission(request);\n        }\n    } catch (error) {\n        console.error(\"Error processing request:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Failed to process request\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function handleCSVAnalysis(request) {\n    try {\n        const formData = await request.formData();\n        const file = formData.get(\"file\");\n        if (!file) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"No file uploaded\"\n            }, {\n                status: 400\n            });\n        }\n        const text = await file.text();\n        const lines = text.split(\"\\n\").slice(1); // Skip header row\n        // Process CSV data\n        const results = lines.filter((line)=>line.trim()) // Remove empty lines\n        .map((line)=>{\n            const columns = line.split(\",\");\n            return {\n                title: columns[0]?.trim() || \"\",\n                price: parseFloat(columns[8]?.trim() || \"0\"),\n                monthlySales: parseInt(columns[9]?.trim() || \"0\", 10),\n                monthlyRevenue: parseFloat(columns[9]?.trim() || \"0\"),\n                rating: parseFloat(columns[4]?.trim() || \"0\"),\n                reviews: parseInt(columns[5]?.trim() || \"0\", 10),\n                score: parseFloat(columns[6]?.trim() || \"0\"),\n                recommendation: \"Average\" // Default value\n            };\n        });\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(results);\n    } catch (error) {\n        console.error(\"Error processing CSV:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to process CSV file\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function handleSubmission(request) {\n    try {\n        const data = await request.json();\n        // Validate the submission data\n        if (!data.userId) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                error: \"User ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        if (!data.productData || !Array.isArray(data.productData.competitors) || data.productData.competitors.length === 0) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                error: \"Product data with competitors is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Use the ID provided from client if available, otherwise generate new one\n        const submissionId = data.id || `sub_${Date.now()}_${Math.random().toString(36).substring(2, 10)}`;\n        // Use the actual calculated score and status from marketScore object\n        const score = data.marketScore && typeof data.marketScore.score === \"number\" ? data.marketScore.score : typeof data.score === \"number\" ? data.score : 0;\n        const status = data.marketScore?.status || data.status || \"N/A\";\n        // Normalize the submission data\n        const submission = {\n            id: submissionId,\n            createdAt: data.createdAt || new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n            score: score,\n            status: status,\n            userId: data.userId,\n            title: data.title || \"Untitled Analysis\",\n            productData: data.productData,\n            keepaResults: data.keepaResults || [],\n            marketScore: data.marketScore || {\n                score,\n                status\n            },\n            metrics: data.metrics || {\n                calculatedAt: new Date().toISOString()\n            },\n            marketInsights: data.marketInsights || \"\",\n            fromSaveCalculation: data.fromSaveCalculation || false,\n            fromUpload: data.fromUpload || false\n        };\n        // Load existing submissions\n        let submissions = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.loadSubmissions)();\n        // First check if this is a duplicate submission based on ID\n        const existingByIdIndex = submissions.findIndex((sub)=>sub.id === submissionId);\n        if (existingByIdIndex >= 0) {\n            // Update existing submission\n            submissions[existingByIdIndex] = submission;\n            console.log(`Updated existing submission with ID: ${submissionId}`);\n        } else {\n            // Check if this is likely a duplicate based on title and userId\n            // We only do this when NOT explicitly coming from the \"Save Calculation\" button\n            if (!data.fromSaveCalculation) {\n                const existingByTitleIndex = submissions.findIndex((sub)=>sub.userId === data.userId && sub.title === data.title && // Only consider it a duplicate if statuses match\n                    sub.status === status);\n                if (existingByTitleIndex >= 0) {\n                    // This is likely a duplicate, so update the existing record instead\n                    const existingId = submissions[existingByTitleIndex].id;\n                    // Preserve the original ID and creation date\n                    submission.id = existingId;\n                    submission.createdAt = submissions[existingByTitleIndex].createdAt;\n                    submissions[existingByTitleIndex] = submission;\n                    console.log(`Prevented duplicate: Updated submission with title \"${data.title}\" instead of creating new one`);\n                } else {\n                    // This is a new submission\n                    submissions.push(submission);\n                    console.log(`Added new submission with ID: ${submissionId}`);\n                }\n            } else {\n                // This is from the Save Calculation button, so add it as a new submission\n                submissions.push(submission);\n                console.log(`Added new submission from Save Calculation with ID: ${submissionId}`);\n            }\n        }\n        // Create a response with the cookie\n        const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            submission,\n            message: \"Analysis saved successfully\"\n        });\n        // Add the submission data to the cookie\n        (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.saveSubmissions)(response, submissions);\n        return response;\n    } catch (error) {\n        console.error(\"Error saving submission:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: error instanceof Error ? error.message : \"Failed to save submission\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        const url = new URL(request.url);\n        const userId = url.searchParams.get(\"userId\");\n        if (!userId) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                error: \"User ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Load all submissions to make sure we have the latest\n        const submissions = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.loadSubmissions)();\n        console.log(`Loaded ${submissions.length} total submissions`);\n        // Filter submissions by user ID\n        const userSubmissions = submissions.filter((sub)=>sub.userId === userId);\n        console.log(`Found ${userSubmissions.length} submissions for user ${userId}`);\n        // Sort submissions by creation date (newest first)\n        userSubmissions.sort((a, b)=>new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n        // Create response\n        const response = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            submissions: userSubmissions\n        });\n        // Save current state to cookies too\n        (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.saveSubmissions)(response, submissions);\n        return response;\n    } catch (error) {\n        console.error(\"Error fetching submissions:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Failed to fetch submissions\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/analyze/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze%2Froute&page=%2Fapi%2Fanalyze%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze%2Froute.ts&appDir=%2FUsers%2Fdavekeefe%2FDocuments%2FPythonScripts%2Fsaas%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdavekeefe%2FDocuments%2FPythonScripts%2Fsaas&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();