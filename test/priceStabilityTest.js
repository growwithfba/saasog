const { keepaService } = require('../src/services/keepaService'); const fs = require('fs'); const path = require('path'); function runPriceStabilityTest() { // Mock price history data with variations const priceHistory = []; const basePrice = 40; let currentPrice = basePrice; const now = Date.now(); for (let i = 0; i < 100; i++) { // Create realistic price variations if (i % 10 === 0) { // Occasional price change currentPrice = basePrice + (Math.random() * 10 - 5); } const timestamp = now - (i * 24 * 60 * 60 * 1000); // go back i days priceHistory.push({ timestamp, value: currentPrice }); } // Add price spikes and drops priceHistory[15].value = basePrice * 1.2; // 20% spike priceHistory[35].value = basePrice * 0.8; // 20% drop console.log('Testing price stability calculation with mock data...'); const stability = keepaService.calculatePriceStability(priceHistory); console.log('Result:', stability); console.log('Formatted:', (stability * 100).toFixed(1) + '%'); // Now test with the test data from JSON, if it exists try { const dataPath = path.join(__dirname, 'price_data.json'); if (fs.existsSync(dataPath)) { const testData = JSON.parse(fs.readFileSync(dataPath, 'utf8')); console.log('
Testing with real sample price data...'); console.log('Data points:', testData.length); const realStability = keepaService.calculatePriceStability(testData); console.log('Real data result:', realStability); console.log('Formatted:', (realStability * 100).toFixed(1) + '%'); } } catch (error) { console.error('Error testing with real data:', error); } } runPriceStabilityTest();
